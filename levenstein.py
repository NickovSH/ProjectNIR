import Levenshtein
# path_list = ['D:/Универ/НИР/Phrase_1_16/16/14.10.2013', 'D:/Универ/НИР/Phrase_1_16/16/16.03.2016',
#         'D:/Универ/НИР/Phrase_1_16/16/25.09.2013', 'D:/Универ/НИР/Phrase_1_16/27/19.08.2014',
#         'D:/Универ/НИР/Phrase_1_16/27/25.07.2014', 'D:/Универ/НИР/Phrase_1_16/27/30.04.2014',
#         'D:/Универ/НИР/Phrase_1_16/28/14.07.2014', 'D:/Универ/НИР/Phrase_1_16/28/20.08.2014',
#         'D:/Универ/НИР/Phrase_1_16/28/29.07.2014', 'D:/Универ/НИР/Phrase_1_16/30/20.10.2014',
#         'D:/Универ/НИР/Phrase_1_16/30/24.09.2014', 'D:/Универ/НИР/Phrase_1_16/30/29.08.2014',
#         'D:/Универ/НИР/Phrase_1_16/37/03.04.2015', 'D:/Универ/НИР/Phrase_1_16/37/17.04.2015',
#         'D:/Универ/НИР/Phrase_1_16/37/29.02.2016', 'D:/Универ/НИР/Phrase_1_16/44/03.11.2015',
#         'D:/Универ/НИР/Phrase_1_16/44/13.11.2015', 'D:/Универ/НИР/Phrase_1_16/44/31.08.2015',
#         'D:/Универ/НИР/Phrase_1_16/46/07.10.2015', 'D:/Универ/НИР/Phrase_1_16/46/15.09.2015',
#         'D:/Универ/НИР/Phrase_1_16/46/29.09.2015', 'D:/Универ/НИР/Phrase_1_16/48/04.03.2016',
#         'D:/Универ/НИР/Phrase_1_16/48/14.01.2016', 'D:/Универ/НИР/Phrase_1_16/48/29.01.2016',
#         'D:/Универ/НИР/Phrase_1_16/54/05.05.2016', 'D:/Универ/НИР/Phrase_1_16/54/19.01.2017',
#         'D:/Универ/НИР/Phrase_1_16/54/21.03.2016', 'D:/Универ/НИР/Phrase_1_16/56/21.03.2016',
#         'D:/Универ/НИР/Phrase_1_16/56/27.04.2016', 'D:/Универ/НИР/Phrase_1_16/59/05.05.2016',
#         'D:/Универ/НИР/Phrase_1_16/59/11.04.2016', 'D:/Универ/НИР/Phrase_1_16/59/12.05.2016',
#         'D:/Универ/НИР/Phrase_1_16/62/09.09.2016', 'D:/Универ/НИР/Phrase_1_16/62/17.05.2016',
#         'D:/Универ/НИР/Phrase_1_16/62/27.04.2016', 'D:/Универ/НИР/Phrase_1_16/65/09.08.2016',
#         'D:/Универ/НИР/Phrase_1_16/65/12.08.2016', 'D:/Универ/НИР/Phrase_1_16/65/26.07.2016',
#         'D:/Универ/НИР/Phrase_1_16/68/14.09.2016', 'D:/Универ/НИР/Phrase_1_16/68/18.01.2017',
#         'D:/Универ/НИР/Phrase_1_16/68/22.08.2016', 'D:/Универ/НИР/Phrase_1_16/68/30.11.2016',
#         'D:/Универ/НИР/Phrase_1_16/69/07.10.2016', 'D:/Универ/НИР/Phrase_1_16/69/12.09.2016',
#         'D:/Универ/НИР/Phrase_1_16/71/11.10.2016', 'D:/Универ/НИР/Phrase_1_16/71/12.12.2016',
#         'D:/Универ/НИР/Phrase_1_16/71/28.03.2017', 'D:/Универ/НИР/Phrase_1_16/71/29.11.2016',
#         'D:/Универ/НИР/Phrase_1_16/72/27.10.2016', 'D:/Универ/НИР/Phrase_1_16/72/29.11.2016',
#         'D:/Универ/НИР/Phrase_1_16/74/16.12.2016', 'D:/Универ/НИР/Phrase_1_16/74/23.11.2016',
#         'D:/Универ/НИР/Phrase_1_16/75/19.12.2016', 'D:/Универ/НИР/Phrase_1_16/75/31.10.2017',
#         'D:/Универ/НИР/Phrase_1_16/77/06.02.2017', 'D:/Универ/НИР/Phrase_1_16/77/16.02.2017',
#         'D:/Универ/НИР/Phrase_1_16/77/18.01.2017', 'D:/Универ/НИР/Phrase_1_16/77/22.02.2017',
#         'D:/Универ/НИР/Phrase_1_16/78/06.04.2017', 'D:/Универ/НИР/Phrase_1_16/78/20.03.2017']
dict = ['белая пелена лежала на полях', 'белый пар расстилается над лужами',
        'экипаж танка понял задачу', 'этот блок работает хорошо', 'начинаются степные пожары',
        'ученики поливают огород', 'тяжелый подъем закончился', 'тропинка уперлась в глинистый уступ',
        'солнце поднялось над лесом', 'в подъезде стояли санитары', 'стало известно место встречи',
        'на участке ведется наблюдение', 'в класс вошел преподаватель', 'полено раскололось надвое',
        'надо зарядить ружье', 'мать отвела ребенка в сад', 'ребята сидели на берегу',
        'в магазине продаются яблоки', 'директор сравнил доход с расходом', 'высокая рожь колыхалась',
        'цветы пестрели в долине', 'чудный запах леса освежает', 'день был удивительно хорош'
        ]
path_list = ['D:/Универ/НИР/Phrase_1_8/46/07.10.2015']

path_list_result_recog = []
path_list_levenstein = []
i = 0
line_list = []

def levenstein():
    for path in path_list:
        path_list_result_recog.append(path + '/result.txt')

    for path in path_list:
        path_list_levenstein.append(path + '/levenstein.txt')



    for n in range(len(path_list_result_recog)):
        print(path_list_result_recog[n])
        line_list = []
        with open(path_list_result_recog[n], 'r', encoding='utf-8') as f:
            while True:
                line = str(f.readline())
                line_list.append(line)
                if not line:
                    break

        for i in range(23):
            with open(path_list_levenstein[n], 'a', encoding='utf-8') as f:
                lev = Levenshtein.distance(line_list[i], dict[i]) - 1
                f.write(str(lev) + '\n')




levenstein()